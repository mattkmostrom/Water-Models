# some global params
units real
boundary p p p #all periodic
atom_style full #bonds, bends, torsions, etc
timestep 1.000000 # femtoseconds (1e-15 s)

# the atoms file
read_restart water_pair.restart
#read_data water_pair.xyz
#read_data SPCF_250.init
#replicate 5 5 5

# methods for potential/force calculations
kspace_style pppm 1.0e-6
pair_style lj/cut/coul/long 5 

# pair_characterization eps sigma cut_1 cut_2
pair_coeff 2 2 0 0.898 2.7 #H-H sigma = 2*r_min 
pair_coeff 1 2 0 0.4 2.7 #O-H Mixing rules were RMS 
pair_coeff 1 1 0.1521 3.166 5 #9.45 #O-O  Parameters from Jorgensen, cutoff is 3*sig

bond_style harmonic
bond_coeff 1 404.101 1.0

angle_style class2
angle_coeff * 109.5 36.3758 0 0
angle_coeff 1 bb -2.414 1 1
angle_coeff 1 ba 5.4492 5.4492 1 1

dump Dumplammps all atom 10 dump.lammpstraj

restart 10 water_pair.1.restart water_pair.restart

compute cc1 all chunk/atom molecule
compute myChunk all dipole/chunk cc1
fix 1 all ave/time 1 1 1 c_myChunk[*] file tmp.out mode vector

#variable dipole_x atom x*q
#variable dipole_y atom y*q
#variable dipole_z atom z*q
#systemDipole_x
#compute sD_x all reduce sum v_dipole_x
#compute sD_y all reduce sum v_dipole_y
#compute sD_z all reduce sum v_dipole_z

#variable yeetx equal c_sD_x
#variable yeety equal c_sD_y
#variable yeetz equal c_sD_z

#variable total_system_dipole equal sqrt((c_sD_x*c_sD_x)+(c_sD_y*c_sD_y)+(c_sD_z*c_sD_z))

#fix get_total_system_dipole all print 1 "${yeetx} ${yeety} ${yeetz}" file "input.txt"

thermo_style multi #print to terminal
thermo 10

fix 2 all nvt temp 298 298 1000 #tchain 2 #iso 10 10 1000 #random_number atoms_assigned ensemble thermostat start_temp end_temp gradient_step

run 2000000
write_data SPCF.init nocoeff
